package View;

import Controller.HomeController;
import Controller.MainController;
import Model.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class Home implements ActionListener {
    private JPanel panel;
    private JLabel homeLabel;
    private JButton floresButton;
    private JButton clientesButton;
    private JButton fornecedoresButton;
    private JButton comprasButton;
    private JButton saveBtn;


    public JDialog getDialog() {
        return (JDialog) this.panel.getParent();
    }

    public void actionPerformed(ActionEvent e) {
        try {
            if (e.getSource() == this.comprasButton) {
                HomeController.openGenericCRUD((MainController.getCompras()), Compra.class);
            } else if (e.getSource() == this.fornecedoresButton) {
                HomeController.openGenericCRUD((MainController.getFornecedores()), Fornecedor.class);
            } else if (e.getSource() == this.clientesButton) {
                HomeController.openGenericCRUD((MainController.getClientes()), Cliente.class);
            } else if (e.getSource() == this.floresButton) {
                HomeController.openGenericCRUD((MainController.getFlores()), Flor.class);
            } else if (e.getSource() == this.saveBtn) {
                MainController.save();
                JOptionPane.showMessageDialog(this.panel, "Salvo com sucesso!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this.panel, ex.getMessage());
        }

    }

    public JPanel getPanel() {
        return panel;
    }

    public Home() {
        this.comprasButton.addActionListener(this);
        this.floresButton.addActionListener(this);
        this.clientesButton.addActionListener(this);
        this.fornecedoresButton.addActionListener(this);
        this.saveBtn.addActionListener(this);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(7, 1, new Insets(100, 100, 100, 100), -1, -1));
        homeLabel = new JLabel();
        Font homeLabelFont = this.$$$getFont$$$("Lucida Sans Typewriter", -1, 36, homeLabel.getFont());
        if (homeLabelFont != null) homeLabel.setFont(homeLabelFont);
        homeLabel.setText("SGF");
        panel.add(homeLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        floresButton = new JButton();
        floresButton.setText("Flores");
        panel.add(floresButton, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        clientesButton = new JButton();
        clientesButton.setText("Clientes");
        panel.add(clientesButton, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fornecedoresButton = new JButton();
        fornecedoresButton.setText("Fornecedores");
        panel.add(fornecedoresButton, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        comprasButton = new JButton();
        comprasButton.setBackground(new Color(-16769727));
        comprasButton.setDefaultCapable(true);
        comprasButton.setForeground(new Color(-16750661));
        comprasButton.setText("Venda");
        panel.add(comprasButton, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        saveBtn = new JButton();
        saveBtn.setText("Salvar no arquivo");
        panel.add(saveBtn, new com.intellij.uiDesigner.core.GridConstraints(6, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        panel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(50, 50), null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
