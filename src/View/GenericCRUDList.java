package View;

import Controller.GenericCRUDListController;
import Model.Fornecedor;
import View.Util.JButtonWithObject;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class GenericCRUDList implements ActionListener {
    private ArrayList<Object> array;
    private Class<?> clazz;
    private JPanel painel;
    private JPanel panel;
    private JButton voltarButton1;

    private JLabel nameLabel;
    private JButton criarNovoButton1;

    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JButtonWithObject) {
            JButtonWithObject jb = (JButtonWithObject) e.getSource();
            if ((jb).getText().equals("Excluir")) { //clicou no botão excluir
                int op = JOptionPane.showConfirmDialog(this.panel, "Tem certeza que deseja excluir?");
                if (op == JOptionPane.YES_OPTION) {
                    GenericCRUDListController.excluir(jb.getObject());
                    this.refreshPainelComponents();
                }
            } else if ((jb).getText().equals("Editar")) { //clicou no botão editar
                GenericCRUDListController.openUpdate(jb.getObject());
            }
        } else {
            if (e.getSource() == this.voltarButton1) {
                Component component = (Component) e.getSource();
                ((JDialog) SwingUtilities.getRoot(component)).dispose();
            } else if (e.getSource() == this.criarNovoButton1) { //clicou para criar um novo elemento
                GenericCRUDListController.openCreate(this.clazz);
            }
        }
    }

    public JPanel getPanel() {
        return panel;
    }

    public GenericCRUDList(ArrayList<Object> array, Class<?> clazz) {

        this.array = array;
        this.clazz = clazz;
        $$$setupUI$$$();
        this.nameLabel.setText("Listagem de " + this.clazz.getSimpleName());
        this.voltarButton1.addActionListener(this);
        this.criarNovoButton1.addActionListener(this);

    }

    public JPanel getPainel() {
        return painel;
    }

    public void refreshPainelComponents() {
        this.painel.removeAll();
        GridBagConstraints c = new GridBagConstraints();
        c.fill = GridBagConstraints.HORIZONTAL;
        int cont = 0;
        for (Object o : this.array) {
            c.gridy = cont;
            c.gridx = 0;
            c.weightx = 2;
            this.painel.add(new JLabel(o.toString(), SwingConstants.LEFT), c);
            c.weightx = 0;
            c.gridx = 1;
            JButtonWithObject jbo = new JButtonWithObject("Editar", o);
            jbo.addActionListener(this);
            this.painel.add(jbo, c);
            c.gridx = 2;
            jbo = new JButtonWithObject("Excluir", o);
            jbo.addActionListener(this);
            this.painel.add(jbo, c);
            cont++;
        }
        this.painel.revalidate();
        this.painel.repaint();
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here

        this.painel = new JPanel();
        this.painel.setLayout(new GridBagLayout());
        this.refreshPainelComponents();


    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel = new JPanel();
        panel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel.setAlignmentX(0.5f);
        panel.setAutoscrolls(false);
        panel.setInheritsPopupMenu(false);
        panel.setMaximumSize(new Dimension(500, 500));
        panel.setMinimumSize(new Dimension(500, 500));
        painel.setAutoscrolls(true);
        panel.add(painel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(500, 400), new Dimension(500, 400), new Dimension(500, 400), 0, false));
        nameLabel = new JLabel();
        nameLabel.setBackground(new Color(-16383935));
        nameLabel.setForeground(new Color(-16750661));
        nameLabel.setText("Listagem");
        panel.add(nameLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        voltarButton1 = new JButton();
        voltarButton1.setText("Voltar");
        panel.add(voltarButton1, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        criarNovoButton1 = new JButton();
        criarNovoButton1.setText("Criar novo");
        panel.add(criarNovoButton1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
